
// Задача 1.
// Определить индекс второй подстроки 'date' у переменной string.
// Код должен работать на 2 тестах
// 1-ый тест
// let string = 'date 10.10.10 date 20.20.20 date 30.30.30' 
// 14    

// 2-ой тест
// let string = '10.10.10 date 20.20.20 date 30.30.30 date'   
// 23

// let result = string.indexOf('date', string.indexOf('date')+1)
// console.log(result)

// ----------------------------------------
// slice(n,m) - позволяет сформировать подстрку от n индекса (вкл) до m индекса (не вкл) у строки 
// let a = 'Привет мой друг'

// console.log(a.slice(0,6))        Привет
// console.log(a.slice(7,10))       мой
// console.log(a.slice(11))         друг   
// console.log(a.slice(-4))         друг

// --------------------------------------
// substring(n,m) -- позволяет сформировать подстрку от n индекса (вкл) до m индекса (не вкл) у строки 
// 1) Второй аргумент может быть отрицательным 
// 2) Второй аргумент может быть меньше чем первый аргумент
// let a = 'Привет мой друг'

// console.log(a.substring(6,-1))       Привет
// console.log(a.substring(3,6))        вет
// console.log(a.substring(6,3))        вет

// --------------------------------------
// replace(n,m) -- заменяет подстроку n на подстроку m 

// let a = 'Привет мой друг'

// console.log(a.replace('мой' ,'наш'))     Привет наш друг
// console.log(a.replace('мой' ,''))        Привет  друг

//console.log(a.replace('р','-'))          П-ивет мой друг
// console.log(a.replaceAll('р','-'))       П-ивет мой д-уг

//-----------

// Задача 2.
// Задан массив emails, передающий строковые элементы. Определите, все ли элементы содержат верную почту.
// Критерии правильной почты: наличие "@" и "."
// В качестве ответа необходимо в консоль вывести ответ true/false для каждого элемента.

// Пример:
// let emails = ['top@dot.com', 'abra@gmailcom', 'pot.mail.ru', 'grek@pro.pro']
// // Результат:
// // true
// // false
// // false
// // true

// emails.forEach(elem => console.log(elem.includes('@') && elem.includes('.')))

//-----------

// Задача 3.
// Задан массив phones
// Сформируйте новый массив newPhones. 
// Если телефон начинается на +7 - он должен оказаться в новом массиве

// Пример:
// let phones = ['+7975644911','8975644944','+7975644999','+7975644945']

// Результат:
// ['+7975644911','+7975644999','+7975644945']

// Решение 1
// let newPhones = []
// for (let i = 0; i < phones.length; i++){
//     if (phones[i].startsWith('+7')){
//         newPhones.push(phones[i])
//     }
// }

// Решение 2

// let newPhones = phones.filter(phone => phone.startsWith('+7') )
// console.log(newPhones)

//-----------

// Задача 4.
// Задан массив phones, передающий номера телефонов в виде строки.
// Реализуйте очистку данных, сформировав единый вид для все элементов массива.phones

// Пример:
// let phones = ['891 11112 233','89181-1122-44','8911-11122-44','89111112244']

// Результат:

// ['+79111112233','+79111112244','+79111112244','+79111112244']

// Решение 1

// for (let i = 0; i < phones.length; i++){
//     phones[i] = phones[i].replace('8', '+7').replaceAll('-', '').replaceAll(' ', '')
// }

// Решение 2

// phones = phones.map(elem => elem.replace('8', '+7').replaceAll('-', '').replaceAll(' ', ''))

// console.log(phones)